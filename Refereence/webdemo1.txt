你先去看下 javascript 的东西 然后可以先把一些接口写好
像是能量曲线 你就可以assume 回来的 https block body 里面有 一串数字 或者是一串坐标，然后进行绘制
以及 信息的上传 post 之类的
还有背景的显话条目的流动
还有二维码的现实 这些功能的代码你现在已经可以开始写了 或者边看边写
把 和服务器交互的地方都写好
需要把功能模块 变成 处理借口

问题：什么是二维码的显示？

JavaScript 写前端逻辑要求：

1. 从服务器拉取数据并展示
能量曲线图（Energy Curve）
从后端接口获取一串数字或坐标点
在前端画出折线图（或曲线图）

2. 信息上传（POST 数据）
上传用户行为或设置，比如点击行为、输入内容、选择操作等
使用 fetch 发送 POST 请求到服务器

3. 背景动效（条目流动）
比如文字、图形在页面中不断滚动、漂浮
使用 CSS Animation 或 Canvas

4. 二维码显示
将某个 URL 或用户 ID 转换成二维码图片
可以使用 qrcode.js 或 QRCode.react（React 版）

结构
/project
├── index.html       ← 你导出的 HTML
├── style.css        ← 可以将内联样式提取出来
├── script.js        ← JavaScript 主逻辑
├── api.js           ← 所有接口调用封装
├── chart.js         ← 能量图相关逻辑（可选拆分）
├── /assets          ← 静态图标/背景图

步骤：
把你刚才提到的模块分开写
先写 fake 的接口内容来调试 UI（用本地 JSON 代替后台）
先实现 UI，再接入真实接口
每个模块都抽成函数（如：renderQRCode(), renderEnergyChart()）


computer.txt 文件是一段由 Figma 或类似网页设计工具导出的 HTML 代码，
内容包括：
1.页面结构 <div> 布局
2.内联 CSS 样式（style="..."）
3.SVG 图像嵌入（<svg>...</svg>）
4.自定义属性（如 data-layer="..."）


测试：
需要保证网页可以成功发送到服务器，并且可以接受返回处理
https请求，用fast api-uvicorn，装了包之后创造两个接口
main.py自写服务器 def blabla(input) return input
地址 127.0.0.1 / 127.0.0.1:9999
测试是否能从post传输到main，每个function都在路由器上 接口@api.pos(/test)

Timing后端返回的是json，python list 2 列（时间，数值）
fast api设置固定object，返回的数据变成ui图

功能表达：
用前端网页向 FastAPI 服务器发送 HTTPS POST 请求，FastAPI 处理数据并返回 JSON，前端接收后用于绘制 UI 图表。
技术表达：
我要用 FastAPI + Uvicorn 搭一个本地测试服务器，在 127.0.0.1:9999 上运行。创建一个 POST 接口 /test，前端通过 HTTPS POST 请求传入一个参数，服务器返回固定结构的 JSON（两列 list：时间和数值），供前端绘制能量图表使用。后端使用 @app.post("/test") 定义接口，返回数据结构会兼容前端 UI 的绘图组件。

技术栈：
后端框架：Python + FastAPI + Uvicorn
访问方式：本地开发环境 127.0.0.1:9999
请求协议：希望支持 HTTPS（测试可用 HTTP 起步）
接口功能：
1. OST /test：接受前端发来的 JSON 请求
2. 返回结构：Python list 格式的 [ [时间], [数值] ]，供前端绘图用


6/12/2025 Update
生成一个时间序列，范围覆盖：6 月、7 月、8 月、9 月（四个月），
每一天都生成 每两个小时一个时间点 的时间戳
每个时间戳对应一个数值（float 或 double）
数值可以是随机生成的（用于测试），或由服务器返回
最终生成的数据格式为：float 或者double


自适应 大小
Zoom in zoom out
绘图时候 一些平滑处理
Api function

1. 3 month can draw
2. Color, zoom in zoom out, beauty, smooth etc
3.  const response = await fetch('http://127.0.0.1:9999/analyze/birthday' put into the top 



6/13/2025
1. 响应式 -k
2. 线的颜色和ui图相近 -k
3. 姓名邮箱电话加入post -k
4. 每个图都只显示12个点

6/13/2025 night
1）保留月视图和日视图，去掉电话和周视图，小时图；  -k
2）default显示日视图；-k
3）能量最高点要在这两个视图中显示，用白色圆点表示（目前的月视图的圆点在每个月开始的轴上，不是最高点）-k
4）生日里面加入时间 -k
5）生日下面加入出生地（现在做不了的话就写地点然后框框放”请关注正式版发布“） -k


